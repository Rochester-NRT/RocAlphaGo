sudo: required
dist: trusty
language: python
# tested language / keras backends
matrix:
    include:
        - python: 2.7
          env: KERAS_BACKEND=theano
        - python: 2.7
          env: KERAS_BACKEND=tensorflow

# Install packages
install:
  # code below is taken from http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  
  - conda create -q -n RocAlphaGo-test python=$TRAVIS_PYTHON_VERSION
  - source activate RocAlphaGo-test

  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm

  # install requirements
  - conda install --yes Cython=0.24 h5py=2.6.0 numpy=1.11.2 scipy=0.18.1 PyYAML=3.12 matplotlib pandas pytest
  - pip install --user --no-deps Theano==0.8.2 sgf==0.5 keras==1.1.2 pygtp==0.3
  - pip install --user flake8

  # install TensorFlow
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.3" ]]; then
      pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp34-cp34m-linux_x86_64.whl;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.4" ]]; then
      pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp34-cp34m-linux_x86_64.whl;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]]; then
      pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl;
    fi
# run flake8 and unit tests
script:
    - flake8

    # run keras backend init to initialize backend config
    - python -c "import keras.backend"
    # set keras image_dim_ordering to 'th'
    - sed -i -e 's/"image_dim_ordering":[[:space:]]*"[^"]*/"image_dim_ordering":\ "'th'/g' ~/.keras/keras.json;
    # set keras backend to $KERAS_BACKEND ( 'tensorflow' or 'theano' )
    - sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;

    # run unit test
    - python -m unittest discover
